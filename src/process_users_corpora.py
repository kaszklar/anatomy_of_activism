################################################################################
# This script takes the raw user acct info in
# data/processed/combo_user_df_sept19.pkl
# generated by 'get_all_users_info.py' and calculates age of account and
# double checks that corpus information is correct based on info from the raw
# tweets.
#
# Input:
# data/processed/combo_user_df_sept19.pkl
# Output:
# repo/data/processed/combo_user_df_sept19.pkl
################################################################################
import pandas as pd
from datetime import datetime

# Note raw data source
df = pd.read_pickle("../data/processed/combo_user_df_sept19.pkl")

# ---------------------------------------------------------------------------- #
# Add account age information to each user
# ---------------------------------------------------------------------------- #
created_time_format = "%a %b %d %H:%M:%S +%f %Y" # matches format from twitter

df['days_old'] = df.created_at.apply(lambda x:
    (datetime.today() - datetime.strptime(x, created_time_format)).days)

df['years_old'] = df.days_old.apply(lambda x: x/365)


# ---------------------------------------------------------------------------- #
# Pull users list from RAW tweets, separate into one corpus or other
# and assign each user in the global users list either todes, latinx, or both
# ---------------------------------------------------------------------------- #
latinx = pd.read_csv("../data/raw/LX-Sept2019.csv")
todes = pd.read_csv("../data/raw/TE-Sept2019.csv")

unique_lx_users = latinx.username.unique()
unique_te_users = todes.username.unique()
intersection = set(unique_lx_users).intersection(set(unique_te_users))


for idx, row in df.iterrows():
    if row.screen_name in unique_lx_users:
        df.loc[idx, 'latinx'] = 1
    if row.screen_name in unique_te_users:
        df.loc[idx, 'todes'] = 1

# corpus = both if in both, otherwise todes or latinx
df['corpus'] = pd.Series(dtype=str)
for idx, row in df.iterrows():
    if (row.todes == 1) & (row.latinx == 1):
        df.loc[idx, 'corpus'] = 'both'
    if (row.todes == 1) & (row.latinx == 0):
        df.loc[idx, 'corpus'] = 'todes'
    if (row.todes == 0) & (row.latinx == 1):
        df.loc[idx, 'corpus'] = 'latinx'

# ---------------------------------------------------------------------------- #
# Save out
# ---------------------------------------------------------------------------- #
df.to_pickle("../data/processed/combo_user_df_sept19.pkl")
df.to_json("../data/processed/combo_user_df_sept19.json")